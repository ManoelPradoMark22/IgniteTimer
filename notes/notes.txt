documentação de estilos/cores/components da Rocketseat
https://andromeda.rocketseat.dev/


________________

ESLINT:
1º:
npm i @rocketseat/eslint-config -D

2º:
criar na raiz um arquivo: .eslintrc.json e o seu conteúdo deve ser:
{
  "extends": "@rocketseat/eslint-config/react"
}

3º (checar se há erros de lint):
npx eslint src --ext .ts,.tsx

Bônus (corrigir o lint de todos os arquivos automaticamente):
npx eslint src --ext .ts,.tsx --fix

O ESLint permite que a gente configure diversas regras para padronizar a organização do nosso código.

Isso vai desde como deve ser o comportamento de quebras de linha, ponto-e-vírgula, vírgulas e até mesmo regras para nomeação de variáveis ou 
plugins que ajudam a gente à não esquecer algumas regras do React: https://www.npmjs.com/package/eslint-plugin-react-hooks

Nessa aula, veremos como configurar o ESLint utilizando o plugin de padrões que utilizamos na Rocketseat, sem a necessidade de fazer uma série de configurações manuais.

Caso queira ver as configurações utilizadas nesse plugin, você pode acessar o repositório oficial com o código dessas configurações para o React: 
https://github.com/Rocketseat/eslint-config-rocketseat/blob/main/react.js

O ESLint possui uma enorme lista de rules (regras) que você pode configurar, e todas estão disponíveis através desse link da documentação oficial: 
https://eslint.org/docs/rules/

Caso queira ver mais sobre como configurar o ESLint manualmente, você pode ver o guia de Getting Started do ESLint disponível no seguinte link: 
https://eslint.org/docs/user-guide/getting-started

________________

React router DOM: como configurar a navegação da nossa aplicação para que ela tenha múltiplas páginas.

Para isso, vamos instalar a biblioteca React Router DOM: https://reactrouter.com/
e iremos estruturar a navegação da nossa aplicação.

________________

Context Providers -> Como o ThemeProvider e BrowserRouter , sao components q nao teem efeito visual, mas produzem o contexto para os compoenents dentro deles

use the BrowserRouter (context provider) to englobe the Router component

________________

inherit -> faz herdar aquela propriedade do pai

export const FormContainer = styled.div`
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  color: ${(props) => props.theme['gray-100']};
  font-size: 1.125rem;
  font-weight: bold;
  flex-wrap: wrap;
`
const BaseInput = styled.input`
  font-size: inherit;  /*  /HERE - herdando do FormContainer*/
  background: transparent;
  height: 2.5rem;
  border: 0;
  bor
